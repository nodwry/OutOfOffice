@{
    ViewData["Title"] = "Leave Requests List";
}

@model IEnumerable<OutOfOffice.Models.LeaveRequest>

<table class="table">
    <thead>
        <tr>
            <th id="idHeader">ID</th>
            <th id="employeeIdHeader">Employee ID</th>
            <th id="absenceReasonHeader">Absence Reason</th>
            <th id="fromHeader">From</th>
            <th id="toHeader">To</th>
            <th id="commentHeader">Comment</th>
            <th id="statusHeader">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var leaveRequest in Model)
        {
            <tr>
                <td>@leaveRequest.ID</td>
                <td>@leaveRequest.EmployeeId</td>
                <td>@Html.DisplayFor(modelItem => leaveRequest.AbsenseReason)</td>
                <td>@leaveRequest.StartDate.ToShortDateString()</td>
                <td>@leaveRequest.EndDate.ToShortDateString()</td>
                <td>@leaveRequest.Comment</td>
                <td>@leaveRequest.LeaveRequestStatus</td>
            </tr>
        }
    </tbody>
</table>

<div class="text-right mt-3">
    <a href="@Url.Action("SubmitLeaveRequest", "LeaveRequest")" class="btn btn-primary">Submit Request</a>
</div>


@section Scripts {
    <script>document.addEventListener("DOMContentLoaded", function () {
            const getCellValue = (row, index) => row.children[index].innerText || row.children[index].textContent;

            const comparer = (index, asc) => (a, b) => ((v1, v2) =>
                v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
            )(getCellValue(asc ? a : b, index), getCellValue(asc ? b : a, index));

            document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
                const table = th.closest('table');
                const tbody = table.querySelector('tbody');
                Array.from(tbody.querySelectorAll('tr'))
                    .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(tr => tbody.appendChild(tr));
            })));
        });</script>
}