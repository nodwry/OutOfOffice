@{
    ViewData["Title"] = "Leave Requests List";
}

@model IEnumerable<OutOfOffice.Models.LeaveRequest>

<table class="table">
    <thead>
        <tr>
            <th id="idHeader">ID</th>
            <th id="employeeIdHeader">Approver</th>
            <th id="absenceReasonHeader">Absence Reason</th>
            <th id="fromHeader">From</th>
            <th id="toHeader">To</th>
            <th id="commentHeader">Comment</th>
            <th id="statusHeader">Status</th>
            <th id="actionHeader">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var leaveRequest in Model)
        {
            <tr>
                <td>@leaveRequest.Id</td>
                <td>@leaveRequest.Employee?.PeoplePartnerId</td>
                <td>@Html.DisplayFor(modelItem => leaveRequest.AbsenseReason)</td>
                <td>@leaveRequest.StartDate.ToShortDateString()</td>
                <td>@leaveRequest.EndDate.ToShortDateString()</td>
                <td>@leaveRequest.Comment</td>
                <td>@leaveRequest.LeaveRequestStatus</td>
                <td>
                    <a href="@Url.Action("UpdateLeaveRequest", "LeaveRequest", new { leaveRequestId = leaveRequest.Id })"
                       class="btn btn-custom-grey btn-sm update-btn"
                       data-status="@leaveRequest.LeaveRequestStatus">Update</a>
                    <form asp-action="CancelLeaveRequest" method="post" style="display:inline;">
                        <input type="hidden" name="leaveRequestId" value="@leaveRequest.Id" />
                        <button type="submit"
                                class="btn btn-custom-grey btn-sm cancel-btn"
                                data-status="@leaveRequest.LeaveRequestStatus">
                            Cancel request
                        </button>
                    </form>
                    <button type="button"
                            class="btn btn-custom-grey btn-sm details-btn"
                            data-leave-request-id="@leaveRequest.Id"
                            data-toggle="modal"
                            data-target="#leaveRequestDetailsModal"
                            data-id="@leaveRequest.Id"
                            data-start-date="@leaveRequest.StartDate.ToString("yyyy-MM-dd")"
                            data-end-date="@leaveRequest.EndDate.ToString("yyyy-MM-dd")">
                        Details
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-right mt-3">
    <a href="@Url.Action("SubmitLeaveRequest", "LeaveRequest")" class="btn btn-primary">Submit Request</a>
</div>

<div class="modal fade" id="leaveRequestDetailsModal" tabindex="-1" role="dialog" aria-labelledby="leaveRequestDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="leaveRequestDetailsModalLabel">Leave Request Details</h5>
            </div>
            <div class="modal-body">
                <div id="leaveRequestDetailsContent">
                    <p><strong>ID:</strong> <span id="lrId"></span></p>
                    <p><strong>Leave Request ID:</strong> <span id="lrLeaveRequestId"></span></p>
                    <p><strong>Employee Full Name:</strong> <span id="lrEmployeeFullName"></span></p>
                    <p><strong>Absence Reason:</strong> <span id="lrAbsenceReason"></span></p>
                    <p><strong>Comment:</strong> <span id="lrComment"></span></p>
                    <p><strong>Start Date:</strong> <span id="lrStartDate"></span></p>
                    <p><strong>End Date:</strong> <span id="lrEndDate"></span></p>
                    <p><strong>Status:</strong> <span id="lrStatus"></span></p>
                    <p><strong>Last Status Change:</strong> <span id="lrLastStatusChange"></span></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>

    <script>document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.details-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const leaveRequestId = this.getAttribute('data-leave-request-id');
                    const startDate = this.getAttribute('data-start-date');
                    const endDate = this.getAttribute('data-end-date');

                    fetch(`/LeaveRequest/GetLeaveRequestDetails?id=${leaveRequestId}`)
                        .then(response => response.json())
                        .then(data => {
                            $('#lrId').text(data.id);
                            $('#lrEmployeeId').text(data.employeeId);
                            $('#lrEmployeeFullName').text(data.employeeFullName);
                            $('#lrAbsenceReason').text(data.absenceReason);
                            $('#lrComment').text(data.leaveRequestComment ?? 'N/A');
                            $('#lrStartDate').text(new Date(data.startDate).toLocaleDateString());
                            $('#lrEndDate').text(new Date(data.endDate).toLocaleDateString());
                            $('#lrSubmittedTime').text(new Date(data.submittedTime).toLocaleString());
                            $('#lrStatus').text(data.leaveRequestStatus);
                            $('#lrLastStatusChange').text(new Date(data.lastStatusChange).toLocaleString());

                            $('#leaveRequestDetailsModal').modal('show');
                        })
                        .catch(error => {
                            console.error('Error fetching leave request details:', error);
                        });
                });
            });

            const getCellValue = (row, index) => row.children[index].innerText || row.children[index].textContent;
            const comparer = (index, asc) => (a, b) => {
                const v1 = getCellValue(asc ? a : b, index);
                const v2 = getCellValue(asc ? b : a, index);
                return !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2);
            };

            document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
                const table = th.closest('table');
                const tbody = table.querySelector('tbody');
                Array.from(tbody.querySelectorAll('tr'))
                    .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(tr => tbody.appendChild(tr));
            })));

            function formatDate(dateString) {
                if (!dateString) return '';
                return new Date(dateString).toLocaleString();
            }

            const disableButtons = (selector, statuses) => {
                document.querySelectorAll(selector).forEach(button => {
                    const status = button.getAttribute('data-status').toLowerCase();
                    if (statuses.includes(status)) {
                        button.classList.add('disabled');
                        button.disabled = true;
                    }
                });
            };

            const statusesToDisable = ['cancelled', 'rejected', 'approved'];
            disableButtons('.update-btn', statusesToDisable);
            disableButtons('.cancel-btn', statusesToDisable);
        });</script>
}
